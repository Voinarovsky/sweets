import itertools
def sequence_element(n: int): #функция
    mas = []    #создаем пустой массив для чисел последовательности
    for i in range(1, n+1):    #цикл с числами котрые нам нужны это всегда от 1 до заданного номера, так как бессмыслено делать массив на миллион
        mas.append([i] * i) #делаем в пустом массиве подмассивы с числами т.е. [1],[2,2],[3,3,3] и т.д. Тут написано что i элемент будет в массиве i количество раз
    fullmas = list(itertools.chain(*mas)) #так как у нас сейчас массив выглядит как [[],[],[]...] делаем из него нормальный что бы поиск по индексу был проще
    if n == 1: #на 1 все ломается потому что поиск происходит от 0 а в задание дается 1 элемент и нельзя написать массив[1] если он уже из одного элемента там индекс будет 0 а 1 не сущ
        return fullmas[0] #поэтому ебашим условие если элемент первый то индекс 0
    else:юоон
        return fullmas[n-1] #ну и для адекватного поиска напишем n-1 что бы сразу по номеру искал так как опять же индексация с 0

print(
    sequence_element(1),    # = 1
    sequence_element(2),    # = 2
    sequence_element(3),    # = 2
    sequence_element(4),    # = 3
    sequence_element(5),    # = 3
    sequence_element(6),    # = 3
    sequence_element(7),    # = 4
    sequence_element(13),   # = 5
    sequence_element(2023), # = 64
    sequence_element(2024)  # = 64
)